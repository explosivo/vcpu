vcpu:
  virtual cpu. instructions are 16-bit.

note:
  the vcpu works but the design of the arch is a work in progress.
  i recently rewrote the assembler and got it working, but it is
  not yet fully featured.

registers:
  there are 8 registers, r0 to r7.

i'm still tweaking the isa.  it turns out, 16-bit instructions was
a dumb constraint for a machine that's not even real. but i guess
dealing with it makes it a challenge

r-type:
  op   flg rd  rm  rn
  0000 000 000 000 000

i-type:
  immediate instructions take two cycles. the first word is the
  i-type instruction that is being decoded. the second word is the
  immediate.

  op   flg rm  rd  unused
  0000 000 000 000 000
  immd
  0000000000000000

j-type:
  op   addr
  0000 000000000000

opcodes:
  add: 0x0
  sub: 0x1
  mul: 0x2
  div: 0x3
  jmp: 0x4
  set: 0x5
  mov: 0x6
  bne: 0x7
  beq: 0x8
  blt: 0x9
  bgt: 0xa
  ble: 0xb
  bge: 0xc
  lw : 0xd
  sw : 0xe

todo:
  implement mov
  implement immediate versions of arithmetic instructions
  fix error handling
  implement branch/conditional instructions
  implement stack
  implement load/store word
  cleanup code

